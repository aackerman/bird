{"name":"Bird","tagline":"Twitter API wrapper","body":"## Bird :bird:\r\n\r\n### Simple wrapper around [request](https://github.com/mikeal/request) to consume the Twitter API\r\n\r\nBird methods match up to twitter resources.\r\n\r\n```js\r\nBird.auth.requestToken({\r\n  oauth: {\r\n    consumer_key: 'XXXXXXXXXXXXXXXXXXXXX',\r\n    consumer_secret: 'XXXXXXXXXXXXXXXXXXXXXXXXXXXX'\r\n  }\r\n}, function(err, response, body){\r\n  var token = qs.parse(body);\r\n  // save the users token for later use\r\n  // redirect user to https://api.twitter.com/oauth/authorize?oauth_token= + token.oauth_token\r\n});\r\n```\r\n\r\nIf the users authorizes your application, Twitter will make a `GET` request to your Twitter application callback URL. The request query string will contain an `oauth_verifier`. Then you can request a permanent access token to handle requests to the Twitter API on behalf of the user.\r\n\r\n```js\r\nBird.auth.accessToken({\r\n  oauth: {\r\n    consumer_key: 'XXXXXXXXXXXXXXXXXXXXX',\r\n    consumer_secret: 'XXXXXXXXXXXXXXXXXXXXXXXXXXXX',\r\n    token: 'XXXXXXXXXXXXX' // the users OAuth token from `requestToken`\r\n    verifier: 'XXXXXXXXXXXXX' // the verifier sent to your Twitter application callback route\r\n  }\r\n}, function(err, response, body){\r\n  var token = qs.parse(body)\r\n  // save the users `token.oauth_token` and `token.oauth_token_secret` here\r\n})\r\n```\r\n\r\nIf you have the oauth token and token secret for a user you are ready to handle requests to Twitter on their behalf.\r\n\r\n```js\r\nBird.timelines.home({ oauth: oauth }, function(err, r, body){\r\n  // the body will be an array of tweets\r\n});\r\n```\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}